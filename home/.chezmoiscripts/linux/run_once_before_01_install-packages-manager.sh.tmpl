#!/bin/bash

# Import formatting library
source "{{ .chezmoi.sourceDir }}/utils-linux/formatting.sh"

# Script header
print_header "Package Managers Installation" "Installing Homebrew, fnm, pipx and setting up repositories" "$ICON_BREW"

# Set total steps for progress tracking
set_total_steps 9

# Step 1: System Update
print_step 1 "System Update"
print_action "Updating" "apt packages" "$ICON_UPDATE"
sudo apt update -y

# Step 2: Check and create ~/.local/bin directory
print_step 2 "Local bin directory setup"
if [ ! -d "$HOME/.local/bin" ]; then
    print_action "Creating" "~/.local/bin directory" "$ICON_CONFIG"
    mkdir -p "$HOME/.local/bin"
    print_success "Created ~/.local/bin directory"
else
    print_success "~/.local/bin directory already exists"
fi

# Add ~/.local/bin to PATH if not already there
if [[ ":$PATH:" != *":$HOME/.local/bin:"* ]]; then
    print_action "Adding" "~/.local/bin to PATH" "$ICON_CONFIG"
    echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.profile
    export PATH="$HOME/.local/bin:$PATH"
    print_success "Added ~/.local/bin to PATH"
else
    print_success "~/.local/bin is already in PATH"
fi

# Step 3: Install Git (Required by Homebrew)
print_step 3 "Git Installation"
print_action "Installing" "Git" "$ICON_INSTALL"
sudo apt install -y git

# Step 4: Homebrew Installation
print_step 4 "Homebrew Installation"
print_action "Installing" "Homebrew" "$ICON_INSTALL"
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

#Install fnm
#curl -fsSL https://fnm.vercel.app/install | bash

print_action "Configuring" "Homebrew PATH" "$ICON_CONFIG"
# Add Homebrew to PATH
(echo; echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"') >> ~/.profile
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
source ~/.profile

#Install cargo

# Step 5: Homebrew Taps
print_step 5 "Homebrew Taps"
print_action "Adding" "Homebrew taps" "$ICON_CONFIG"

# List of taps to add
taps=(
    "blacktop/tap"
    "browsh-org/homebrew-browsh"
    "espanso/espanso"
    "jesseduffield/lazygit"
    "koekeishiya/formulae"
    "kdash-rs/kdash"
    "c-bata/kube-prompt"
    "knqyf263/pet"
    "trendyol/trendyol-tap"
    "derailed/k9s"
    "kubeshark/kubeshark"
    "hashicorp/tap"
    "arttor/tap"
    "jandedobbeleer/oh-my-posh"
    "jorgerojas26/lazysql"
    "davep/homebrew"
)

# Add taps with progress bar
for i in "${!taps[@]}"; do
    print_progress $((i+1)) ${#taps[@]} "Adding tap: ${taps[$i]}"
    brew tap "${taps[$i]}"
done

print_action "Updating" "Homebrew" "$ICON_UPDATE"
brew update

# Step 6: Python Tools
print_step 6 "Python Tools"
print_action "Installing" "pipx" "$ICON_PYTHON"
brew install pipx
pipx ensurepath

# Step 7: Essential Packages
print_step 7 "Essential Packages"
packages=("build-essential")

for i in "${!packages[@]}"; do
    print_progress $((i+1)) ${#packages[@]} "Installing: ${packages[$i]}"
    if [ "${packages[$i]}" = "build-essential" ]; then
        sudo apt-get install build-essential
    else
        sudo apt install "${packages[$i]}"
    fi
done

# Step 8: Docker Repository Setup
print_step 8 "Docker Repository Setup"
print_action "Adding" "Docker's official GPG key" "$ICON_CONFIG"
# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

print_action "Adding" "Docker repository" "$ICON_CONFIG"
# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

# Step 9: Additional Repositories
print_step 9 "Additional Repositories"
print_action "Adding" "Tabby repository" "$ICON_CONFIG"
# Add tabby repository
curl -s https://packagecloud.io/install/repositories/eugeny/tabby/script.deb.sh | sudo bash
sudo apt-get update

print_success "Package managers installation completed successfully!"
print_footer "Package Managers Installation" "completed"
