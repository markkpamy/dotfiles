# Check if scoop package installation is enabled
{{ if not (hasKey . "installScoopPackages") }}
$installScoopPackages = $false
{{ else }}
$installScoopPackages = [System.Convert]::ToBoolean("{{ .installScoopPackages }}")
{{ end }}

if (-not $installScoopPackages) {
  Write-Host 'SKIPPING SCOOP PACKAGE INSTALLATION (disabled by config)'
  exit
}

$env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")

if (-not (Get-Command "scoop" -ErrorAction SilentlyContinue))
{
  Write-Error "Scoop hasn't been installed!"
  exit
}

{{- if and (hasKey . "installScoopPackages") .installScoopPackages }}

{{ if .pkgs.windows.scoop.buckets }}
Write-Host 'ADDING SCOOP BUCKETS...'
  {{ range $bucket := .pkgs.windows.scoop.buckets }}
scoop bucket add '{{ $bucket }}'
  {{ end }}
{{ end }}

{{ if .pkgs.windows.scoop.pkgs }}
Write-Host 'INSTALLING SCOOP PACKAGES...'
  {{ range $pkg := .pkgs.windows.scoop.pkgs }}
scoop install '{{ $pkg }}'
  {{ end }}
{{ end }}

{{ if .pkgs.windows.scoop.importRegistry }}
Write-Host 'IMPORTING SCOOP REGISTRY...'
{{ range $reg := .pkgs.windows.scoop.importRegistry }}
if (Test-Path -Path "{{ $reg }}" -PathType Leaf)
{
  reg import "{{ $reg }}" # Need for env expansion
}
{{ end }}
{{ end }}

{{- end }}
