{{ if .pkgs.windows.winget }}

$env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")

if (-not (Get-Command "winget" -ErrorAction SilentlyContinue))
{
  Write-Error "Winget hasn't been installed!"
  exit
}

if (-Not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] 'Administrator')) {
  if ([int](Get-CimInstance -Class Win32_OperatingSystem | Select-Object -ExpandProperty BuildNumber) -ge 6000) {
    $CommandLine = "-File `"" + $MyInvocation.MyCommand.Path + "`" " + $MyInvocation.UnboundArguments
    Start-Process -Wait -FilePath pwsh.exe -Verb Runas -ArgumentList $CommandLine
    Exit
  }
}

Write-Host "INSTALLING WINGET PACKAGES..."

#winget install {{ .pkgs.windows.winget | quoteList | join " " }} --accept-source-agreements --accept-package-agreements
  {{ range $pkg := .pkgs.windows.winget }}
Write-Host "INSTALLING {{ $pkg }}..."
winget install '{{ $pkg }}' --accept-source-agreements --accept-package-agreements --scope machine
  {{ end }}

{{ end }}
