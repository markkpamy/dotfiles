{{- if and .pkgs.python.windows.uv .installPythonPackages }}

# Refresh environment variables to ensure Python is in PATH
$env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")

# Check if Python is installed
if (-not (Get-Command "python" -ErrorAction SilentlyContinue)) {
    Write-Error "Python is not installed or not in PATH. Please install Python first."
    exit 1
}

# Check if uv is installed
if (-not (Get-Command "uv" -ErrorAction SilentlyContinue)) {
    Write-Host "uv is not installed. Installing uv..." -ForegroundColor Yellow
    powershell -c "irm https://astral.sh/uv/install.ps1 | iex"
    # Refresh environment
    $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")

    # Check again after installation
    if (-not (Get-Command "uv" -ErrorAction SilentlyContinue)) {
        Write-Error "Failed to install uv. Please install manually."
        exit 1
    }
}

Write-Host "INSTALLING UV PACKAGES (Windows)..." -ForegroundColor Green

# Initialize project if pyproject.toml doesn't exist
if (-not (Test-Path "pyproject.toml")) {
    Write-Host "Initializing uv project..." -ForegroundColor Yellow
    uv init --no-readme --quiet
}

# Install each package
{{ range $pkg := .pkgs.python.windows.uv }}
Write-Host "Installing {{ $pkg }} via uv..." -ForegroundColor Cyan
uv add {{ $pkg }} --quiet
if ($LASTEXITCODE -ne 0) {
    Write-Warning "Failed to install {{ $pkg }} via uv"
} else {
    Write-Host "Successfully installed {{ $pkg }} via uv" -ForegroundColor Green
}
{{ end }}

# Sync environment
Write-Host "Syncing uv environment..." -ForegroundColor Yellow
uv sync --quiet

Write-Host "UV PACKAGES INSTALLATION COMPLETED" -ForegroundColor Green

{{- else }}
Write-Host "SKIPPING UV PACKAGES INSTALLATION" -ForegroundColor Yellow
{{- end }}
