# AWS Helper Functions for Fish Shell

# Test AWS configuration
function aws-test
    echo "üß™ Testing AWS configuration..."
    echo "üìã Default profile:"
    aws sts get-caller-identity --profile default
    echo "üìã Available profiles:"
    aws configure list-profiles
end

# Quick AWS profile switch
function aws-profile
    if test (count $argv) -eq 0
        echo "Current AWS profile: "(set -q AWS_PROFILE; and echo $AWS_PROFILE; or echo "default")
        echo "Available profiles:"
        aws configure list-profiles
    else
        set -gx AWS_PROFILE $argv[1]
        echo "‚úÖ AWS profile set to: $argv[1]"
        aws sts get-caller-identity
    end
end

# AWS role assumption helper
function aws-assume
    if test (count $argv) -eq 0
        echo "Usage: aws-assume <profile-name>"
        return 1
    end

    echo "üîÑ Assuming role for profile: $argv[1]"
    aws sts get-caller-identity --profile $argv[1]
end

# Update AWS config (just re-apply chezmoi)
function aws-config-update
    echo "üîÑ Updating AWS config from Bitwarden..."

    # Ensure BWS session is active
    if not set -q BWS_ACCESS_TOKEN
        echo "üîê Setting up BWS session..."
        bwst
    end

    # Re-apply chezmoi templates
    echo "üìù Re-applying Chezmoi templates..."
    chezmoi apply ~/.aws/config

    echo "‚úÖ AWS config updated successfully"
    echo "üìã Available profiles:"
    aws configure list-profiles
end

# Show AWS profile information (without exposing account numbers)
function aws-profiles
    echo "üîç AWS Profile Information:"
    echo "=========================="

    set profiles \
        "nx_training_advanced:Training Advanced (EU West 3)" \
        "nx_datahub_advanced:DataHub Advanced (EU West 3)" \
        "nx_training_master:Training Master (EU West 1)" \
        "nx_profile:Training Profile (EU West 3)" \
        "nx-presales-advanced:Presales Advanced (AP Southeast 1)" \
        "nx-presales-master:Presales Master (AP Southeast 1)" \
        "nx_datahub_master:DataHub Master (EU West 3)" \
        "nx_renovation_master:Renovation Master (EU West 3)" \
        "nx_renovation_advanced:Renovation Advanced (EU West 3)"

    for profile_info in $profiles
        set profile_parts (string split ":" $profile_info)
        printf "%-25s %s\n" $profile_parts[1] $profile_parts[2]
    end

    echo ""
    echo "üí° Use 'aws-profile <name>' to switch profiles"
    echo "üí° Use 'aws-config-update' to refresh from Bitwarden"
end

# Quick aliases for common profiles
function aws-dev
    aws-profile nx_training_advanced
end

function aws-staging
    aws-profile nx_datahub_advanced
end

function aws-prod
    aws-profile nx_training_master
end

function aws-datahub
    aws-profile nx_datahub_master
end

function aws-renovation
    aws-profile nx_renovation_master
end

function aws-presales
    aws-profile nx-presales-master
end
