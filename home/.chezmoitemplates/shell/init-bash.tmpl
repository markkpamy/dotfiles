# Bash initialization
# Source additional config files
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

ulimit -n 4096

# Initialize ble.sh (Bash Line Editor) if available
if [ -f ~/.local/share/blesh/ble.sh ]; then
    source ~/.local/share/blesh/ble.sh
fi

# Initialize prompt
if command -v oh-my-posh &> /dev/null; then
    eval "$(oh-my-posh init bash --config $HOME/.oh-my-posh.json)"
fi
{{/*elif command -v starship &>/dev/null*/}}
{{/*    starship init fish | source*/}}
{{/*end*/}}

# Initialize tools
if command -v zoxide &> /dev/null; then
    eval "$(zoxide init bash)"
fi

if command -v direnv &> /dev/null; then
    eval "$(direnv hook bash)"
fi

{{/*if command -v atuin &> /dev/null; then*/}}
{{/*    eval "$(atuin init bash)"*/}}
{{/*fi*/}}

if command -v kubectl &> /dev/null; then
    source <(kubectl completion bash)
fi

# UV completion
if command -v uv &> /dev/null; then
    eval "$(uv generate-shell-completion bash)"
fi

# UVX completion
if command -v uvx &> /dev/null; then
    eval "$(uvx --generate-shell-completion bash)"
fi

# Terraform completion
if command -v terraform &> /dev/null; then
    complete -C /usr/bin/terraform terraform
fi

# Helm completion
if command -v helm &> /dev/null; then
    source <(helm completion bash)
fi

# GitHub CLI completion
if command -v gh &> /dev/null; then
    eval "$(gh completion -s bash)"
fi

# Flux CD completion
if command -v flux &> /dev/null; then
    source <(flux completion bash)
fi

# Cargo (Rust package manager)
if [ -d "$HOME/.cargo/bin" ]; then
    export PATH="$HOME/.cargo/bin:$PATH"
fi
