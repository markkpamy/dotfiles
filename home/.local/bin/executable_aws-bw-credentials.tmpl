#!/usr/bin/env bash

# AWS Credential Process Script for Bitwarden Integration
# This script fetches AWS credentials from Bitwarden for the default profile
# Runs on Linux/macOS only (Windows uses PowerShell version)

set -euo pipefail

# Configuration
{{- if .aws.use_bws }}
# Using Bitwarden Secrets Manager (BWS)
ACCESS_KEY_SECRET="aws-default-access-key-id"
SECRET_KEY_SECRET="aws-default-secret-access-key"

# Check for BWS access token
if [ -z "${BWS_ACCESS_TOKEN:-}" ]; then
    echo "Error: BWS_ACCESS_TOKEN environment variable not set" >&2
    echo "Please run: bwst" >&2
    exit 1
fi

# Fetch credentials using BWS
ACCESS_KEY=$(bws secret get "$ACCESS_KEY_SECRET" --access-token "$BWS_ACCESS_TOKEN" --output json 2>/dev/null | jq -r '.value')
SECRET_KEY=$(bws secret get "$SECRET_KEY_SECRET" --access-token "$BWS_ACCESS_TOKEN" --output json 2>/dev/null | jq -r '.value')

{{- else }}
# Using traditional Bitwarden CLI (BW)
BW_ITEM_NAME="{{ .bitwarden.aws.item_name | default "AWS Default Profile" }}"

# Check for Bitwarden session
if [ -z "${BW_SESSION:-}" ]; then
    echo "Error: BW_SESSION environment variable not set" >&2
    echo "Please run: export BW_SESSION=\$(bw unlock --raw)" >&2
    exit 1
fi

# Fetch credentials using BW CLI
ACCESS_KEY=$(bw get username "$BW_ITEM_NAME" --session "$BW_SESSION" 2>/dev/null)
SECRET_KEY=$(bw get password "$BW_ITEM_NAME" --session "$BW_SESSION" 2>/dev/null)
{{- end }}

# Validate credentials were retrieved
if [ -z "$ACCESS_KEY" ] || [ -z "$SECRET_KEY" ]; then
    echo "Error: Failed to retrieve AWS credentials from Bitwarden" >&2
    exit 1
fi

# Output in AWS credential_process format
cat << EOF
{
  "Version": 1,
  "AccessKeyId": "$ACCESS_KEY",
  "SecretAccessKey": "$SECRET_KEY"
}
EOF
