# Use official Homebrew Docker image as base
FROM homebrew/brew:latest

# Set environment to avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8

# Switch to root to install additional tools
USER root

# Install chezmoi and additional tools
RUN apt-get update && \
    apt-get install -y \
        curl \
        ca-certificates \
        locales \
        sudo \
        git \
        unzip \
        wget \
        build-essential && \
    # Generate locales
    locale-gen en_US.UTF-8 && \
    # Install chezmoi globally
    curl -sfL https://git.io/chezmoi | sh -s -- -b /usr/local/bin && \
    # Cleanup
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create entrypoint script
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
# Create user matching host user\n\
USER_ID=${USER_ID:-1000}\n\
GROUP_ID=${GROUP_ID:-1000}\n\
USER_NAME=${USER_NAME:-dev}\n\
\n\
echo "Creating user $USER_NAME with UID $USER_ID and GID $GROUP_ID"\n\
\n\
# Create group if it doesnt exist\n\
if ! getent group $GROUP_ID >/dev/null 2>&1; then\n\
    groupadd -g $GROUP_ID $USER_NAME\n\
else\n\
    echo "Group with GID $GROUP_ID already exists"\n\
fi\n\
\n\
# Create user if it doesnt exist\n\
if ! id $USER_NAME >/dev/null 2>&1; then\n\
    # Check if UID is already taken\n\
    if id $USER_ID >/dev/null 2>&1; then\n\
        echo "UID $USER_ID already exists, using --non-unique flag"\n\
        useradd --non-unique -u $USER_ID -g $GROUP_ID -m -s /bin/bash $USER_NAME\n\
    else\n\
        useradd -u $USER_ID -g $GROUP_ID -m -s /bin/bash $USER_NAME\n\
    fi\n\
    echo "$USER_NAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers\n\
    echo "User $USER_NAME created successfully"\n\
else\n\
    echo "User $USER_NAME already exists"\n\
fi\n\
\n\
# Apply dotfiles if mounted\n\
if [ -d "/dotfiles" ]; then\n\
    echo "Applying dotfiles..."\n\
    su - $USER_NAME -c "chezmoi init --apply https://github.com/markkpamy/dotfiles.git" || true\n\
fi\n\
\n\
# Switch to user and exec command\n\
cd /workspace\n\
exec su - $USER_NAME -c "cd /workspace && exec $*"\n\
' > /entrypoint.sh && chmod +x /entrypoint.sh

# Set working directory
WORKDIR /workspace

# Use entrypoint
ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]

# Build with: docker build -f Dockerfile.dev -t my-dotfiles-env .
# Use with: docker run -it --rm -e USER_ID=$(id -u) -e GROUP_ID=$(id -g) -e USER_NAME=$(id -un) -v "$(pwd):/dotfiles" -v "$PWD:/workspace" my-dotfiles-env
